services:
  es:
    build:
      context: .
      dockerfile: docker/dev/elastic-search/Dockerfile
    volumes:
      - es-data:/usr/share/elasticsearch/data
    restart: always
    ports:
      - "9200:9200"
    networks:
      - api-server

  postgres:
    image: postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.envs/.prd/.database
    ports:
      - "5432:5432"
    networks:
      - api-server

  api:
    build:
      context: .
      dockerfile: docker/prd/django/Dockerfile
    command: /start
    depends_on:
      - es
    volumes:
      - .:/app
      - /data:/data
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    ports:
      - '8000:8000'
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.prd
    env_file:
      - ./.envs/.prd/.django
      - ./.envs/.prd/.database
    restart: unless-stopped
    networks:
      - api-server

  nginx:
    restart: always
    depends_on:
      - api
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
      - /var/certbot/conf:/etc/letsencrypt/:rw
      - /var/certbot/www/:/var/www/certbot/:r
      - /etc/geoip/:/etc/nginx/geoip
    build:
      context: ./docker/prd/nginx
      dockerfile: Dockerfile
    ports:
        - "80:80"
        - "443:443"
    networks:
        - api-server

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - /var/certbot/conf:/etc/letsencrypt/:rw
      - /var/certbot/www/:/var/www/certbot/:rw
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
    api-server:
        driver: bridge

volumes:
  static_volume: {}
  media_volume: {}
  es-data: {}
  production_postgres_data: {}
